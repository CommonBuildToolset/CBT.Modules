<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    In order to use the targets below, a user must manually declare NuGetDeterministicLockedPropsFile and set ValidateNuGetPackagesAreDeterministic to true if their build is running in a hosted build environment.
    
    You can copy and paste the below commented out section and update the ValidateNuGetPackagesAreDeterministic condition to suite your needs.
  -->
  <!--
  <PropertyGroup Condition=" '$(EnableNuGetDeterministic)' != 'false' ">
    <NuGetDeterministicLockedPropsFile Condition=" '$(NuGetDeterministicLockedPropsFile)' == '' ">$(MSBuildProjectDirectory)\NuGetAssetsLock.props</NuGetDeterministicLockedPropsFile>
    
    <ValidateNuGetPackagesAreDeterministic Condition=" '$(SOME_VARIABLE_THAT_IS_SET_DURING_HOSTED_BUILD)' == 'VALUE_DURING_HOSTED_BUILD' ">true</ValidateNuGetPackagesAreDeterministic>
  </PropertyGroup>

  <Import Project="$(NuGetDeterministicLockedPropsFile)" Condition=" '$(EnableNuGetDeterministic)' != 'false' And '$(ValidateNuGetPackagesAreDeterministic)' == 'true' And '$(NuGetDeterministicPropsWasImported)' != 'true' And Exists('$(NuGetDeterministicLockedPropsFile)') " />
  -->

  <PropertyGroup Condition=" '$(EnableNuGetDeterministic)' != 'false' ">
    <NuGetDeterministicTasksAssemblyPath Condition=" '$(NuGetDeterministicTasksAssemblyPath)' == '' ">$(MSBuildThisFileDirectory)net45\NuGet.Tasks.Deterministic.dll</NuGetDeterministicTasksAssemblyPath>
    
    <!--
      Generate or validate but never both.  Users set $(ValidateNuGetPackagesAreDeterministic) to 'true' for hosted builds which disable generation and enables validation.
    -->
    <PrepareForBuildDependsOn Condition=" '$(ValidateNuGetPackagesAreDeterministic)' != 'true' ">$(PrepareForBuildDependsOn);GenerateNuGetDeterministicProps</PrepareForBuildDependsOn>
    <PrepareForBuildDependsOn Condition=" '$(ValidateNuGetPackagesAreDeterministic)' == 'true' ">$(PrepareForBuildDependsOn);ValidateNuGetPackagesAreDeterministic</PrepareForBuildDependsOn>
  </PropertyGroup>

  <UsingTask AssemblyFile="$(NuGetDeterministicTasksAssemblyPath)" TaskName="GenerateLockedPackageReferencesFile" Condition=" '$(EnableNuGetDeterministic)' != 'false' "/>
  <UsingTask AssemblyFile="$(NuGetDeterministicTasksAssemblyPath)" TaskName="ValidateNuGetPackageHashes" Condition=" '$(EnableNuGetDeterministic)' != 'false' " />

  <Target Name="GenerateNuGetDeterministicProps"
          Condition=" @(PackageReference->Count()) != '0' "
          Inputs="$(NuGetDeterministicTasksAssemblyPath);$(MSBuildThisFileFullPath);$(ProjectAssetsFile)"
          Outputs="$(NuGetDeterministicLockedPropsFile)"
          DependsOnTargets="_VerifyNuGetDeterministic;GetNuGetDeterministicExcludes;$(GenerateNuGetDeterministicPropsDependsOn)">
    
    <GenerateLockedPackageReferencesFile
      PropsFile="$(NuGetDeterministicLockedPropsFile)"
      ProjectAssetsFile="$(ProjectAssetsFile)"
      PackagesToExclude="@(NuGetDeterministicPackagesToExclude)"
      ExcludeImplicitReferences="$([MSBuild]::ValueOrDefault('$(NuGetDeterministicExcludeImplicitReferences)', 'false'))"
      />

  </Target>

  <Target Name="ValidateNuGetPackagesAreDeterministic"
          Condition=" '$(ValidateNuGetPackagesAreDeterministic)' == 'true' And @(PackageReference->Count()) != '0' "
          DependsOnTargets="_VerifyNuGetDeterministic;GetNuGetDeterministicExcludes;$(ValidateNuGetPackagesAreDeterministicDependsOn)">

    <!--
      Log an error if $(ValidateNuGetPackagesAreDeterministic) is 'true' but NuGetAssetsLock.props was not imported (because $(NuGetDeterministicPropsWasImported) is not 'true')
    -->
    <Error Code="ND1004"
           Condition=" '@(PackageReference)' != '' And '$(NuGetDeterministicPropsWasImported)' != 'true' "
           Text=" '$(NuGetDeterministicLockedPropsFile)' was not imported and this project contains &lt;PackageReference /&gt; items.  Ensure this file has been generated and commited to source control.  See NuGet.Deterministic NuGet package for more details."
    />

    <!--
      Determine what packages are deterministic and which ones are not.
    -->
    <ItemGroup>
      <_DeterministicNuGetPackages Include="@(PackageReference)" Condition=" '%(PackageReference.Sha512)' != '' "/>
      <_NonDeterministicNuGetPackages Include="@(PackageReference)" Exclude="@(_DeterministicNuGetPackages);@(NuGetDeterministicPackagesToExclude)"/>
    </ItemGroup>
    
    <!--
      Log an error if a package reference from the NuGetAssetsLock.props does not have enough information to determine if it is deterministic.
    -->
    <Error Code="ND1005"
           Condition=" '%(_NonDeterministicNuGetPackages.Identity)' != '' "
           Text="A non-deterministic package reference was found '%(_NonDeterministicNuGetPackages.Identity)'.  Ensure '$(NuGetDeterministicLockedPropsFile)' contains this package with an explicit version.  You can regenerate the file by deleting it and building locally again."
           />
    
    <!--
      Validate the SHA512 hashes of the packages
    -->
    <ValidateNuGetPackageHashes
      PackageFolders="$(NuGetPackageFolders)"
      PackageReferences="@(_DeterministicNuGetPackages)"
      Condition=" '$(NuGetDeterministicValidatePackageHash)' != 'false' "
    />
  </Target>

  <!--
    Adds items to the @(NuGetDeterministicPackagesToExclude) item group which lists packages to not validate.
  -->
  <Target Name="GetNuGetDeterministicExcludes">
    <ItemGroup>
      <!--
        Exclude all implicitly defined packages unless $(NuGetDeterministicExcludeImplicitPackages) is 'true'
      -->
      <NuGetDeterministicPackagesToExclude Include="@(PackageReference)" Condition=" '$(NuGetDeterministicExcludeImplicitPackages)' != 'false' And '%(PackageReference.IsImplicitlyDefined)' == 'true' "/>
    </ItemGroup>
  </Target>

  <Target Name="_VerifyNuGetDeterministic"
          Condition=" '$(NuGetDeterministicLockedPropsFile)' == '' ">

    <Message Importance="High"
             Text="
  &lt;PropertyGroup&gt;
    &lt;NuGetDeterministicLockedPropsFile Condition=&quot; &apos;%24(NuGetDeterministicLockedPropsFile)&apos; == &apos;&apos; &quot;&gt;%24(MSBuildProjectDirectory)\NuGetAssetsLock.props&lt;/NuGetDeterministicLockedPropsFile&gt;
    &lt;ValidateNuGetPackagesAreDeterministic Condition=&quot; &apos;%24(SOME_VARIABLE_THAT_IS_SET_DURING_HOSTED_BUILD)&apos; == &apos;VALUE_DURING_HOSTED_BUILD&apos; &quot;&gt;true&lt;/ValidateNuGetPackagesAreDeterministic&gt;
  &lt;/PropertyGroup&gt;
  &lt;Import Project=&quot;%24(NuGetDeterministicLockedPropsFile)&quot; Condition=&quot; &apos;%24(ValidateNuGetPackagesAreDeterministic)&apos; == &apos;true&apos; And &apos;%24(NuGetDeterministicPropsWasImported)&apos; != &apos;true&apos; And Exists(&apos;%24(NuGetDeterministicLockedPropsFile)&apos;) &quot; /&gt;" />
    
    <Error Code="ND1006"
           Text="The NuGet.Deterministic functionality is not properly configured.  You must declare a property named %24(NuGetDeterministicLockedPropsFile) that specifies the path of the NuGet 'lock' file to generate.  The above XML should be placed into a common import or the top of each project that references the NuGet.Deterministic package." />

    
    
  </Target>

</Project>
