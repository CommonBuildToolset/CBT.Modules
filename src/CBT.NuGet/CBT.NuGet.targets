<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetAdd" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetConfig" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetList" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetPack" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetPush" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetRestore" />
  <UsingTask AssemblyFile="$(CBTNuGetTasksAssemblyPath)" TaskName="CBT.NuGet.Tasks.NuGetSetApiKey" />

  <Target Name="RestoreNuGetPackages"
    Condition=" '$(CBTEnablePackageRestore)' == 'true' "
    DependsOnTargets="_CheckForCBTNuGetPackagesRestoredMarker;$(RestoreNuGetPackagesDependsOn)"
    Inputs="$(CBTNuGetAllProjects);$(CBTNuGetRestoreFile)"
    Outputs="$(CBTNuGetPackagesRestoredMarker)">

    <NuGetRestore
      File="$(CBTNuGetRestoreFile)"
      RequireConsent="$(CBTNuGetRestoreRequireConsent)"
      PackagesDirectory="$(CBTNuGetRestorePackagesDirectory)"
      SolutionDirectory="$(NuGetRestoreSolutionDirectory)"
      MsBuildVersion="$(NuGetMsBuildVersion)"
      DisableParallelProcessing="$(CBTNuGetDisableParallelProcessing)"
      FallbackSource="$(NuGetFallbackSource)"
      NoCache="$(CBTNuGetNoCache)"
      PackageSaveMode="$(NuGetPackageSaveMode)"
      Source="$(NuGetSource)"
      ConfigFile="$(NuGetConfigFile)"
      NonInteractive="$(CBTNuGetNonInteractive)"
      Verbosity="$(NuGetVerbosity)"
      Timeout="$(CBTNuGetTimeout)"
      ToolPath="$(CBTNuGetPath)"
      />

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(CBTNuGetPackagesRestoredMarker)))" Condition=" '$(CBTDisableNuGetPackageRestoreOptimization)' != 'true' " />

    <Touch AlwaysCreate="true" ForceTouch="true" Files="$(CBTNuGetPackagesRestoredMarker)" Condition=" '$(CBTDisableNuGetPackageRestoreOptimization)' != 'true' " />

    <CallTarget Targets="_CheckForCBTNuGetPackagesRestoredMarker" />

  </Target>

  <Target Name="_CheckForCBTNuGetPackagesRestoredMarker">

    <ItemGroup>
      <FileWrites Include="$(CBTNuGetPackagesRestoredMarker)" Condition=" '$(CBTDisableNuGetPackageRestoreOptimization)' != 'true' And Exists('$(CBTNuGetPackagesRestoredMarker)') " />
    </ItemGroup>

  </Target>

</Project>