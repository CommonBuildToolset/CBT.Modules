<?xml version="1.0" encoding="utf-8"?>
<Project InitialTargets="GenerateNuGetAssetFlagFileInsideVisualStudio" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <PrepareForBuildDependsOn Condition=" '$(CBTEnableNuGetPackageRestoreOptimization)' != 'false' ">_CheckForCBTNuGetPackagesRestoredMarker;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
    <RestoreDependsOn>$(RestoreDependsOn);RestoreNuGetPackages</RestoreDependsOn>
    <RestoreDependsOn Condition=" '$(CBTNuGetGeneratePackageProperties)' != 'false' ">$(RestoreDependsOn);GenerateNuGetProperties</RestoreDependsOn>
	<CBTDesignTimeBuildDependsOn>$(CBTDesignTimeBuildDependsOn);GenerateNuGetAssetFlagFileInsideVisualStudio</CBTDesignTimeBuildDependsOn>
  </PropertyGroup>

  <Import Project="$(NuGetTargets)" Condition=" '$(NuGetTargets)' != '' And !Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportAfter\Microsoft.NuGet.ImportAfter.targets') " />

  <Import Project="$(CBTBuildPackageTargetsFile)" Condition=" '$(CBTEnableImportBuildPackages)' != 'false' "/>

  <Target Name="GenerateNuGetAssetFlagFileInsideVisualStudio"
    Condition=" '$(BuildingInsideVisualStudio)' == 'true' "
    Inputs="$(CBTNuGetRestoreFile)"
    Outputs="$(CBTNuGetAssetsFlagFile)">

    <PropertyGroup>
      <RestoreOutputPath Condition=" '$(RestoreOutputPath)' == '' " >$(BaseIntermediateOutputPath)</RestoreOutputPath>
    </PropertyGroup>

    <ConvertToAbsolutePath Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" PropertyName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
    
    <ItemGroup>
      <RestoreAssetsFlagData Remove="@(RestoreAssetsFlagData)"/>
      <RestoreAssetsFlagData Include="ProjectJsonPath">
        <value>$(_CurrentProjectJsonPath)</value>
      </RestoreAssetsFlagData>
      <RestoreAssetsFlagData Include="RestoreProjectStyle">
        <value>$(RestoreProjectStyle)</value>
        <value Condition=" '$(RestoreProjectStyle)' == '' " >$(NuGetProjectStyle)</value>
        <value Condition=" '@(PackageReference->Count())' &gt; 0 ">PackageReference</value>
      </RestoreAssetsFlagData>
      <RestoreAssetsFlagData Include="RestoreOutputAbsolutePath">
        <value>$(RestoreOutputAbsolutePath)</value>
      </RestoreAssetsFlagData>
      <RestoreAssetsFlagData Include="PackageReference">
        <id>%(PackageReference.Identity)</id>
        <version>%(PackageReference.Version)</version>
      </RestoreAssetsFlagData>
    </ItemGroup>
    
    <WriteNuGetRestoreInfo File="$(CBTNuGetAssetsFlagFile)" Input="@(RestoreAssetsFlagData)" />
    
  </Target>

  
  <!--
  This target only runs during traversal restore because the stock Restore target has no DependsOn set, command-line builds
  do restore as part of property evaluation, and Visual Studio based builds run the GenerateNuGetPropertiesInsideVisualStudio
  target instead.
  -->
  <Target Name="GenerateNuGetProperties"
          Condition=" '$(CBTNuGetGeneratePackageProperties)' == 'true' "
          Inputs="$(CBTNuGetAllProjects);$(CBTNuGetRestoreFile)"
          Outputs="$(CBTNuGetPackagePropertyFile)">

    <GenerateNuGetProperties
      PackageRestoreFile="$(CBTNuGetRestoreFile)"
      Inputs="$(CBTNuGetAllProjects.Split(';'))"
      PropsFile="$(CBTNuGetPackagePropertyFile)"
      PropertyVersionNamePrefix="$(CBTNuGetPackagePropertyVersionNamePrefix)"
      PropertyPathNamePrefix="$(CBTNuGetPackagePropertyPathNamePrefix)"
      RestoreInfoFile="$(CBTNuGetAssetsFlagFile)"
    />
  </Target>

  <Import Project="RestoreOnly.targets" Condition=" '$(IsRestoreOnly)' == 'true' " />
  
</Project>