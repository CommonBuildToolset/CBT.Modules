<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(CBTLocalBuildExtensionsPath)\Before.$(MSBuildThisFile)" Condition=" '$(CBTLocalBuildExtensionsPath)' != '' And Exists('$(CBTLocalBuildExtensionsPath)\Before.$(MSBuildThisFile)') " />

  <Import Project="$(CBTModuleExtensionsPath)\Before.$(MSBuildThisFile)" Condition=" '$(CBTModuleExtensionsPath)' != '' And Exists('$(CBTModuleExtensionsPath)\Before.$(MSBuildThisFile)') " />

  <PropertyGroup>

    <!-- CBTSelfContainedBuildOutput indicates whether to isolate the build output on a per-project basis. -->
    <CBTSelfContainedBuildOutput Condition="'$(CBTSelfContainedBuildOutput)' != ''">$([System.Convert]::ToBoolean($(CBTSelfContainedBuildOutput)))</CBTSelfContainedBuildOutput>
    <CBTSelfContainedBuildOutput Condition="'$(CBTSelfContainedBuildOutput)' == ''">true</CBTSelfContainedBuildOutput>

    <BaseIntermediateOutputPath Condition=" '$(BaseIntermediateOutputPath)' =='' ">$(EnlistmentRoot)\obj</BaseIntermediateOutputPath>
    <!-- IntermediateOutputPath requires a trailing slash to prevent MSB8004 warning -->
    <IntermediateOutputPath Condition=" '$(IntermediateOutputPath)' =='' ">$(BaseIntermediateOutputPath)\$(Platform)\$(Configuration)\$(MSBuildProjectFile)\</IntermediateOutputPath>

    <!-- Ensure IntermediateOutputPath is unique in situations where project files have identical names such as traversal projects a.k.a. dirs.proj. -->
    <CBTEnableHashedIntermediateOutputPath Condition="'$(CBTEnableHashedIntermediateOutputPath)'!=''">$([System.Convert]::ToBoolean($(CBTEnableHashedIntermediateOutputPath)))</CBTEnableHashedIntermediateOutputPath>
    <CBTEnableHashedIntermediateOutputPath Condition="'$(CBTEnableHashedIntermediateOutputPath)'==''">true</CBTEnableHashedIntermediateOutputPath>
    <CBTIntermediateOutputPathPartial>$(MSBuildProjectFullPath.SubString($(EnlistmentRoot.Length)))</CBTIntermediateOutputPathPartial>
    <IntermediateOutputPath Condition="'$(CBTEnableHashedIntermediateOutputPath)' == 'true'">$([System.IO.Path]::Combine($(IntermediateOutputPath),$(CBTIntermediateOutputPathPartial.Length.ToString())))\</IntermediateOutputPath>

    <!-- Ensure nuGet restore places generated props correctly. -->
    <MSBuildProjectExtensionsPath>$(IntermediateOutputPath)\</MSBuildProjectExtensionsPath>
    <RestoreOutputPath>$(MSBuildProjectExtensionsPath)</RestoreOutputPath>
    <!-- In the projectJson package restore scenario you can not redefine the location of the json file.  If the ProjectAssetsFile is set then it will be assumed to be a PackageReference project.  -->
    <ProjectAssetsFile Condition="!Exists('$(MSBuildProjectDirectory)\project.json') And !Exists('$(MSBuildProjectDirectory)\package.config')" >$(MSBuildProjectExtensionsPath)project.assets.json</ProjectAssetsFile>

    <!-- must redefine nuget module restore assetsfile location if redefing baseintermediateoutputpath to avoid collision. -->
    <RestoreOutputPath>$(IntermediateOutputPath)</RestoreOutputPath>

    <CBTUnifiedOutputDirUseAssemblyName Condition=" '$(CBTUnifiedOutputDirUseAssemblyName)' == '' ">false</CBTUnifiedOutputDirUseAssemblyName>
  </PropertyGroup>

  <Import Project="$(CBTModuleExtensionsPath)\After.$(MSBuildThisFile)" Condition=" '$(CBTModuleExtensionsPath)' != '' And Exists('$(CBTModuleExtensionsPath)\After.$(MSBuildThisFile)') " />

  <Import Project="$(CBTLocalBuildExtensionsPath)\After.$(MSBuildThisFile)" Condition=" '$(CBTLocalBuildExtensionsPath)' != '' And Exists('$(CBTLocalBuildExtensionsPath)\After.$(MSBuildThisFile)') " />

</Project>