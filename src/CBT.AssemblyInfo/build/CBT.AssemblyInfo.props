<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <EnableCBTAssemblyInfoGeneration Condition=" '$(EnableCBTAssemblyInfoGeneration)' != '' ">$([System.Convert]::ToBoolean($(EnableCBTAssemblyInfoGeneration)))</EnableCBTAssemblyInfoGeneration>
    <EnableCBTAssemblyInfoGeneration Condition=" '$(EnableCBTAssemblyInfoGeneration)' == '' ">true</EnableCBTAssemblyInfoGeneration>
    <EnableCBTAssemblyInfoDepricationCheck Condition=" '$(EnableCBTAssemblyInfoDepricationCheck)' != '' ">$([System.Convert]::ToBoolean($(EnableCBTAssemblyInfoDepricationCheck)))</EnableCBTAssemblyInfoDepricationCheck>
    <EnableCBTAssemblyInfoDepricationCheck Condition=" '$(EnableCBTAssemblyInfoDepricationCheck)' == '' ">true</EnableCBTAssemblyInfoDepricationCheck>
    <!-- Disable stock assembly generation if CBT assembly info generation is enabled. -->
    <GenerateAssemblyInfo Condition=" '$(EnableCBTAssemblyInfoGeneration)' == 'true' ">false</GenerateAssemblyInfo>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(EnableCBTAssemblyInfoGeneration)' == 'true' ">
    <GenerateTargetFrameworkAttribute Condition=" '$(GenerateTargetFrameworkAttribute)' == '' ">false</GenerateTargetFrameworkAttribute>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Please use international format yyyy-mm-dd -->
    <VersionBuildNumberStartDate Condition=" '$(VersionBuildNumberStartDate)' == '' ">$([System.DateTime]::Now.ToString("yyyy-MM-dd"))</VersionBuildNumberStartDate>

    <!--
    Note: when changing VersionMajor or VersionMinor, you probably want to also reset the VersionBuildNumberStartDate:
    - If you want to reset the build number to zero: set VersionBuildNumberStartDate to current date
    - If you want to reset the build number to say 1000: set VersionBuildNumberStartDate to 1000 days in the past.
      Here's how one would figure out what date it was 1000 days ago in PowerShell: Write-Host (Get-Date).AddDays(-1000)
    -->
    <VersionMajor Condition=" '$(VersionMajor)' == '' ">1</VersionMajor>
    <VersionMinor Condition=" '$(VersionMinor)' == '' ">0</VersionMinor>
    <VersionBuildNumber Condition=" '$(VersionBuildNumber)' == '' ">$([System.DateTime]::Now.Subtract($([System.DateTime]::Parse($(VersionBuildNumberStartDate)))).Days)</VersionBuildNumber>
    <VersionBuildRevision Condition=" '$(VersionBuildRevision)' == '' ">0</VersionBuildRevision>
    <Version4PartVersion Condition=" '$(Version4PartVersion)' == '' ">$([System.Version]::new($(VersionMajor).$(VersionMinor).$(VersionBuildNumber).$(VersionBuildRevision)))</Version4PartVersion>
    <AssemblyInfoInformationalVersion Condition=" '$(AssemblyInfoInformationalVersion)' == '' ">$(Version4PartVersion)$(VersionBuildLabel)</AssemblyInfoInformationalVersion>
    <AssemblyInfoAssemblyVersion Condition=" '$(AssemblyInfoAssemblyVersion)' == '' ">$(VersionMajor).$(VersionMinor).0.0</AssemblyInfoAssemblyVersion>
    <AssemblyInfoFileVersion Condition=" '$(AssemblyInfoFileVersion)' == '' ">$(Version4PartVersion)</AssemblyInfoFileVersion>

  </PropertyGroup>

  <!-- create dummy target that will be overridden by the stock target if it exist. -->
  <Target Name="GenerateAssemblyInfo" />

</Project>